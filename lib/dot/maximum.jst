{{# def.definitions }}
{{# def.errors }}
{{# def.setup:'maximum' }}

{{# def.$data }}
{{
  var $schemaExcl = it.schema.exclusiveMaximum;
  var $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data;
}}

{{? $isDataExcl }}
  {{
    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr)
      , $exclusive = 'exclusive' + $lvl
      , $opExpr = 'op' + $lvl
      , $opStr = '\' + ' + $opExpr + ' + \'';
  }}

  var exclusive{{=$lvl}};
  if (typeof {{=$schemaValueExcl}} != 'boolean' && typeof {{=$schemaValueExcl}} != 'undefined') {
    {{# def.error:'exclusiveMaximum' }}
  } else if({{# def.$dataNotType:'number' }}
            ((exclusive{{=$lvl}} = {{=$schemaValueExcl}} === true)
              ? {{=$data}} >= {{=$schemaValue}}
              : {{=$data}} > {{=$schemaValue}})) {
    var op{{=$lvl}} = exclusive{{=$lvl}} ? '<' : '<=';
{{??}}
  {{
    var $exclusive = $schemaExcl === true
      , $opStr = $exclusive ? '<' : '<=' /*used in error*/
      , $notOp = $exclusive ? '>=' : '>'
      , $opExpr = '\'' + $opStr + '\''; /*used in error*/
  }}

  if ({{# def.$dataNotType:'number' }} {{=$data}} {{=$notOp}} {{=$schemaValue}}) {
{{?}}
    {{# def.error:'maximum' }}
  } {{? $breakOnError }} else { {{?}}
