{{# def.definitions }}
{{# def.setup:'required' }}

{{## def.checkRequired:
  {{~ $schema:$property:$i }}
    {{? $i}} || {{?}}
    {{ var $prop = it.util.getProperty($property); }}
    ( {{=$data}}{{=$prop}} === undefined && (missing{{=$lvl}} = '{{=$prop}}') )
  {{~}}
#}}


{{ var $currentErrorPath = it.errorPath; }}

{{? $breakOnError }}
  var missing{{=$lvl}};
  {{? $schema.length <= 100 }}
    if ({{# def.checkRequired }}) {
      {{ it.errorPath = $currentErrorPath + ' + missing' + $lvl; }}
      {{# def.error:'required' }}
    } else {
  {{??}}
    var schema{{=$lvl}} = validate.schema{{=$schemaPath}};
    {{ it.errorPath = ($currentErrorPath + ' + "[\'" + schema' + $lvl + '[i] + "\']"').replace('" + "', ''); }}

    for (var i = 0; i < schema{{=$lvl}}.length; i++) {
      var {{=$valid}} = data[schema{{=$lvl}}[i]] !== undefined;
      if (!{{=$valid}}) break;
    }

    {{# def.checkError:'required' }}
    else {
  {{?}}
{{??}}
  {{? $schema.length <= 10 }}
    {{~ $schema:$property:$i }}
      {{
        var $prop = it.util.getProperty($property);
        it.errorPath = ($currentErrorPath + ' + "' + $prop + '"').replace('" + "', '');
      }}
      if ({{=$data}}{{=$prop}} === undefined) {
        {{# def.error:'required' }}
      }
    {{~}}
  {{??}}
    var schema{{=$lvl}} = validate.schema{{=$schemaPath}};
    {{ it.errorPath = ($currentErrorPath + ' + "[\'" + schema' + $lvl + '[i] + "\']"').replace('" + "', ''); }}

    for (var i = 0; i < schema{{=$lvl}}.length; i++) {
      var {{=$valid}} = data[schema{{=$lvl}}[i]] !== undefined;
      if (!{{=$valid}}) {
        {{# def.error:'required' }}
      }
    }
  {{?}}
{{?}}

{{ it.errorPath = $currentErrorPath; }}
